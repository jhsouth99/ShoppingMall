<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="attribute">

    <!-- 속성 목록 조회 (페이징, 필터링 지원) -->
    <select id="findAttributesWithPaging" parameterType="map" resultType="Attribute">
        SELECT * FROM (
        SELECT
        a.*,
        ROW_NUMBER() OVER (ORDER BY a.display_order ASC, a.id ASC) as rn
        FROM attributes a
        WHERE 1=1
        <if test="keyword != null and keyword != ''">
            AND UPPER(a.name) LIKE '%' || UPPER(#{keyword}) || '%'
        </if>
        <if test="dataType != null and dataType != ''">
            AND a.data_type = #{dataType}
        </if>
        <if test="attributeGroup != null and attributeGroup != ''">
            AND a.attribute_group = #{attributeGroup}
        </if>
        ) WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{size}
    </select>

    <!-- 속성 개수 조회 (필터링 조건 적용) -->
    <select id="countAttributes" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM attributes a
        WHERE 1=1
        <if test="keyword != null and keyword != ''">
            AND UPPER(a.name) LIKE '%' || UPPER(#{keyword}) || '%'
        </if>
        <if test="dataType != null and dataType != ''">
            AND a.data_type = #{dataType}
        </if>
        <if test="attributeGroup != null and attributeGroup != ''">
            AND a.attribute_group = #{attributeGroup}
        </if>
    </select>

    <!-- 특정 속성 조회 -->
    <select id="findAttributeById" parameterType="int" resultType="Attribute">
        SELECT
            id,
            name,
            data_type,
            attribute_group,
            is_searchable,
            is_required,
            display_order,
            created_at
        FROM attributes
        WHERE id = #{attributeId}
    </select>

    <!-- 속성명 중복 체크 -->
    <select id="countByName" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM attributes WHERE name = #{name}
    </select>

    <!-- 새로운 속성 삽입 -->
    <insert id="insertAttribute" parameterType="Attribute" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            SELECT attributes_seq.nextval FROM dual
        </selectKey>
        INSERT INTO attributes (
        id,
        name,
        data_type,
        attribute_group,
        is_searchable,
        is_required,
        display_order,
        created_at
        ) VALUES (
        #{id},
        #{name},
        #{dataType},
        #{attributeGroup, jdbcType=VARCHAR},
        #{isSearchable, typeHandler=com.example.ecommerce.handler.BooleanYNTypeHandler},
        #{isRequired, typeHandler=com.example.ecommerce.handler.BooleanYNTypeHandler},
        #{displayOrder},
        CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 속성 정보 수정 -->
    <update id="updateAttribute" parameterType="Attribute">
        UPDATE attributes
        SET
            name = #{name},
            data_type = #{dataType},
            attribute_group = #{attributeGroup, jdbcType=VARCHAR},
            is_searchable = #{isSearchable, typeHandler=com.example.ecommerce.handler.BooleanYNTypeHandler},
            is_required = #{isRequired, typeHandler=com.example.ecommerce.handler.BooleanYNTypeHandler},
            display_order = #{displayOrder}
        WHERE id = #{id}
    </update>

    <!-- 속성 삭제 -->
    <delete id="deleteAttribute" parameterType="int">
        DELETE FROM attributes WHERE id = #{attributeId}
    </delete>

    <!-- 속성 사용 현황 조회 -->
    <select id="countAttributeUsage" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM (
                                 SELECT 1 FROM category_attributes WHERE attribute_id = #{attributeId}
                                 UNION ALL
                                 SELECT 1 FROM product_attribute_values WHERE attribute_id = #{attributeId}
                             )
    </select>

    <!-- 속성의 옵션 목록 조회 -->
    <select id="findAttributeOptions" parameterType="int" resultType="AttributeOption">
        SELECT
            id,
            attribute_id,
            option_value AS value,
            display_order
        FROM attribute_options
        WHERE attribute_id = #{attributeId}
        ORDER BY display_order ASC, option_value ASC
    </select>

    <!-- 속성의 옵션 개수 조회 -->
    <select id="countAttributeOptions" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM attribute_options WHERE attribute_id = #{attributeId}
    </select>

    <!-- 새로운 속성 옵션 삽입 -->
    <insert id="insertAttributeOption" parameterType="AttributeOption" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        <selectKey keyProperty="id" resultType="int" order="BEFORE">
            SELECT attribute_options_seq.nextval FROM dual
        </selectKey>
        INSERT INTO attribute_options (
        id,
        attribute_id,
        option_value,
        display_order
        ) VALUES (
        #{id},
        #{attributeId},
        #{value},
        #{displayOrder}
        )
    </insert>

    <!-- 속성의 모든 옵션 삭제 -->
    <delete id="deleteAttributeOptions" parameterType="int">
        DELETE FROM attribute_options WHERE attribute_id = #{attributeId}
    </delete>

    <!-- 사용되지 않는 옵션들만 삭제 (안전한 삭제) -->
    <delete id="deleteUnusedAttributeOptions" parameterType="int">
        DELETE FROM attribute_options
        WHERE attribute_id = #{attributeId}
          AND id NOT IN (
            SELECT DISTINCT pav.attribute_option_id
            FROM product_attribute_values pav
            WHERE pav.attribute_option_id IS NOT NULL
        )
    </delete>

    <!-- 특정 옵션 삭제 -->
    <delete id="deleteAttributeOption" parameterType="int">
        DELETE FROM attribute_options WHERE id = #{optionId}
    </delete>

    <!-- 옵션값 중복 체크 -->
    <select id="countOptionValue" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM attribute_options
        WHERE attribute_id = #{attributeId} AND option_value = #{optionValue}
    </select>

    <!-- 다음 옵션 표시 순서 조회 -->
    <select id="getMaxOptionDisplayOrder" parameterType="int" resultType="int">
        SELECT NVL(MAX(display_order), 0)
        FROM attribute_options
        WHERE attribute_id = #{attributeId}
    </select>

    <!-- 옵션 사용 현황 조회 -->
    <select id="countOptionUsage" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM product_attribute_values
        WHERE attribute_option_id = #{optionId}
    </select>

    <!-- 특정 속성의 사용 중인 옵션 개수 조회 -->
    <select id="countUsedOptions" parameterType="int" resultType="int">
        SELECT COUNT(DISTINCT pav.attribute_option_id)
        FROM product_attribute_values pav
                 JOIN attribute_options ao ON pav.attribute_option_id = ao.id
        WHERE ao.attribute_id = #{attributeId}
          AND pav.attribute_option_id IS NOT NULL
    </select>

    <!-- 모든 속성 목록 조회 (카테고리 연결용) -->
    <select id="findAllAttributes" resultType="Attribute">
        SELECT
            id,
            name,
            data_type,
            attribute_group,
            is_searchable,
            is_required,
            display_order
        FROM attributes
        ORDER BY display_order ASC, name ASC
    </select>

</mapper>